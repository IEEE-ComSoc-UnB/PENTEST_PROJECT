#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os
import time

def progress_bar():
    toolbar_width = 20
    sys.stdout.write("[%s]" % (" " * toolbar_width))
    sys.stdout.flush()
    sys.stdout.write("\b" * (toolbar_width+1)) 

    for i in xrange(toolbar_width):
        time.sleep(0.1)
        sys.stdout.write("-")
        sys.stdout.flush()

    sys.stdout.write("\n")

def info():
    print "\n+----------------------------------------------------------------+"
    print "|Coded by Bruno V, Ant√¥nio, Daniel G.                            |"
    print "|Repo: https://github.com/IEEE-ComSoc-UnB/PENTEST_PROJECT        |"
    print "+----------------------------------------------------------------+\n"

def validate_params():
    if(len(sys.argv) < 4 ):
        print "Usage:\n\n\t python " + sys.argv[0] + " [path/destination_file.txt] [SSID] [Wifi_interface]\n\n"
        sys.exit()
    else:
        output_file_name = sys.argv[1]
        ssid = sys.argv[2]
        iface = sys.argv[3]

        if ssid == "UNB_Wireless":
            ssid = ssid.replace("_"," ")

    if(os.name == 'nt'):
        "Windows is not supported!\n\n"
        sys.exit()

    params = [ssid,output_file_name, iface]
    return params

def execute_scann(command):
    try:
        os.system(command)
    except Exception, e:
        print "Error >> " + e.message

def deal_with_file(params):
    content = ''
    with open( "temp.txt",'r') as content_file:
        content = content_file.read()
        content_file.close()

    content.replace("\"","").replace("/","-")
    list_of_cells = content.split("Cell")
    unb_cells = []

    for cell in list_of_cells:
        if( params[0] in cell):
            unb_cells.append(cell)

    filepath = os.path.join('Data', params[1])
    new_file = open(filepath,'a')

    for cell in unb_cells:
        cell += "\n"
        new_file.write(cell)

    new_file.close()
    os.remove("temp.txt")



if __name__ == "__main__":
    output_file_name = ''
    ssid = ''

    info()
    params = validate_params()
    command = "iwlist " + params[2] + " scanning | egrep '(.*)' >> temp.txt" 
    execute_scann(command)
    deal_with_file(params)
    progress_bar()

    print "Arquivo criado com sucesso."


